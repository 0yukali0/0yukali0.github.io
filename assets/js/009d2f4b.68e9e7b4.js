"use strict";(self.webpackChunk_0_yukali_0_github_io=self.webpackChunk_0_yukali_0_github_io||[]).push([[1462],{366:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=t(4848),r=t(8453);const i={id:"datasciencelondonwithray",title:"Ray\u5206\u6563\u5f0f\u8a13\u7df4-DataScienceLondon"},o="DataScienceLondon",s={id:"kubernetes-native/mlops/ray/train/kaggle/datasciencelondonwithray",title:"Ray\u5206\u6563\u5f0f\u8a13\u7df4-DataScienceLondon",description:"\u8cc7\u6599\u4f86\u6e90",source:"@site/docs/kubernetes-native/mlops/ray/train/kaggle/datasciencelondonwithray.md",sourceDirName:"kubernetes-native/mlops/ray/train/kaggle",slug:"/kubernetes-native/mlops/ray/train/kaggle/datasciencelondonwithray",permalink:"/docs/kubernetes-native/mlops/ray/train/kaggle/datasciencelondonwithray",draft:!1,unlisted:!1,editUrl:"https://github.com/0yukali0/0yukali0.github.io/docs/kubernetes-native/mlops/ray/train/kaggle/datasciencelondonwithray.md",tags:[],version:"current",frontMatter:{id:"datasciencelondonwithray",title:"Ray\u5206\u6563\u5f0f\u8a13\u7df4-DataScienceLondon"}},l={},c=[{value:"\u8cc7\u6599\u4f86\u6e90",id:"\u8cc7\u6599\u4f86\u6e90",level:2},{value:"\u7a0b\u5f0f\u78bc",id:"\u7a0b\u5f0f\u78bc",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"datasciencelondon",children:"DataScienceLondon"})}),"\n",(0,a.jsx)(n.h2,{id:"\u8cc7\u6599\u4f86\u6e90",children:"\u8cc7\u6599\u4f86\u6e90"}),"\n",(0,a.jsxs)(n.p,{children:["\u4f7f\u7528",(0,a.jsx)(n.code,{children:"train.csv"}),"\u8207",(0,a.jsx)(n.code,{children:"trainLabels.csv"}),"\u4f5c\u70baX\u8207Y\u3002\n",(0,a.jsx)(n.a,{href:"https://www.kaggle.com/c/data-science-london-scikit-learn/data",children:"kaggle\u984c\u76ee\u7db2\u5740"})]}),"\n",(0,a.jsx)(n.h2,{id:"\u7a0b\u5f0f\u78bc",children:"\u7a0b\u5f0f\u78bc"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import torch\nfrom torch import nn\nfrom torch.utils.data import Dataset\nfrom torch.utils.data import DataLoader\nimport pandas as pd\n\nclass CustomDataloader(Dataset):\n    def __init__(self, x, y):\n        self.dataset = x\n        self.labels = y\n    def __len__(self):\n        return len(self.labels)\n    def __getitem__(self, idx):\n        x = self.dataset.iloc[idx]\n        y = self.labels.iloc[idx, 0]\n        return torch.tensor(x.values).float(), torch.tensor([y]).float()\n\ndef createTrainDataset():\n    train_x = pd.read_csv("train.csv")\n    train_y = pd.read_csv("trainLabels.csv")\n    return CustomDataloader(x=train_x, y=train_y)\n\nclass NeuralNetwork(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.linear_relu_stack = nn.Sequential(\n            nn.Linear(40, 40),\n            nn.ReLU(),\n            nn.Linear(40, 40),\n            nn.ReLU(),\n            nn.Linear(40, 1),\n            nn.Sigmoid(),\n        )\n    def forward(self, x):\n        return self.linear_relu_stack(x)\n\ndef train(dataloader, model, criterion, optimizer):\n    for epoch in range(5):\n        for X, y in dataloader:\n            model.train()\n            optimizer.zero_grad()\n            X, y = X.to(device), y.to(device)\n            pred = model(X)\n            loss = criterion(pred, y)\n            loss.backward()\n            optimizer.step()\n        print(f"epoch: {epoch}, loss: {loss.item()}")\n\ndevice = (\n    "cuda"\n    if torch.cuda.is_available()\n    else "cpu"\n)\n\nmodel = NeuralNetwork().to(device)\ncriterion = nn.BCELoss()\noptimizer = torch.optim.SGD(model.parameters(), lr=1e-3)\ndataloader = DataLoader(createTrainDataset(), batch_size)\ntrain(dataloader, model, criterion, optimizer)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(6540);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);